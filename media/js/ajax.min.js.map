{"version":3,"sources":["ajax.js"],"names":[],"mappings":"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","file":"ajax.min.js","sourcesContent":["/*\n * @package   panopticon\n * @copyright Copyright (c)2023-2023 Nicholas K. Dionysopoulos / Akeeba Ltd\n * @license   https://www.gnu.org/licenses/agpl-3.0.txt GNU Affero General Public License, version 3 or later\n */\n\nif (typeof akeeba === \"undefined\")\n{\n    var akeeba = {};\n}\n\nif (typeof akeeba.Ajax === \"undefined\")\n{\n    /**\n     * An AJAX abstraction layer for use with Akeeba software\n     */\n    akeeba.Ajax = {\n        // Maps nonsense HTTP status codes to what should actually be returned\n        xhrSuccessStatus: {\n            // File protocol always yields status code 0, assume 200\n            0:    200, // Support: IE <=9 only. Sometimes IE returns 1223 when it should be 204\n            1223: 204\n        }, // Used for chained AJAX: each request will be launched once the previous one is done (successfully or not)\n        requestArray:     [], processingQueue: false\n    };\n}\n\n/**\n * Performs an asynchronous AJAX request. Mostly compatible with jQuery 1.5+ calling conventions, or at least the\n * subset\n * of the features we used in our software.\n *\n * The parameters can be\n * method        string      HTTP method (GET, POST, PUT, ...). Default: POST.\n * url        string      URL to access over AJAX. Required.\n * timeout    int         Request timeout in msec. Default: 600,000 (ten minutes)\n * data        object      Data to send to the AJAX URL. Default: empty\n * success    function    function(string responseText, string responseStatus, XMLHttpRequest xhr)\n * error        function    function(XMLHttpRequest xhr, string errorType, Exception e)\n * beforeSend    function    function(XMLHttpRequest xhr, object parameters) You can modify xhr, not parameters. Return\n * false to abort the request.\n *\n * @param   url         {string}  URL to send the AJAX request to\n * @param   parameters  {object}  Configuration parameters\n */\nakeeba.Ajax.ajax = function (url, parameters)\n{\n    // Handles jQuery 1.0 calling style of .ajax(parameters), passing the URL as a property of the parameters object\n    if (typeof (parameters) == \"undefined\")\n    {\n        parameters = url;\n        url        = parameters.url;\n    }\n\n    // Get the parameters I will use throughout\n    var method          = (typeof (parameters.type) == \"undefined\") ? \"POST\" : parameters.type;\n    method              = method.toUpperCase();\n    var data            = (typeof (parameters.data) == \"undefined\") ? {} : parameters.data;\n    var sendData        = null;\n    var successCallback = (typeof (parameters.success) == \"undefined\") ? null : parameters.success;\n    var errorCallback   = (typeof (parameters.error) == \"undefined\") ? null : parameters.error;\n\n    // === Cache busting\n    var cache = (typeof (parameters.cache) == \"undefined\") ? false : parameters.url;\n\n    if (!cache)\n    {\n        var now                = new Date().getTime() / 1000;\n        var s                  = parseInt(now, 10);\n        data._cacheBustingJunk = Math.round((now - s) * 1000) / 1000;\n    }\n\n    // === Interpolate the data\n    if ((method == \"POST\") || (method == \"PUT\"))\n    {\n        sendData = this.interpolateParameters(data);\n    }\n    else\n    {\n        url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n        url += this.interpolateParameters(data);\n    }\n\n    // === Get the XHR object\n    var xhr = new XMLHttpRequest();\n    xhr.open(method, url);\n\n    // === Handle POST / PUT data\n    if ((method == \"POST\") || (method == \"PUT\"))\n    {\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    }\n\n    // --- Set the load handler\n    xhr.onload = function (event)\n    {\n        var status         = akeeba.Ajax.xhrSuccessStatus[xhr.status] || xhr.status;\n        var statusText     = xhr.statusText;\n        var isBinaryResult = (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\";\n        var responseText   = isBinaryResult ? xhr.response : xhr.responseText;\n        var headers        = xhr.getAllResponseHeaders();\n\n        if (status === 200)\n        {\n            if (successCallback != null)\n            {\n                akeeba.Ajax.triggerCallbacks(successCallback, responseText, statusText, xhr);\n            }\n\n            return;\n        }\n\n        if (errorCallback)\n        {\n            akeeba.Ajax.triggerCallbacks(errorCallback, xhr, \"error\", null);\n        }\n    };\n\n    // --- Set the error handler\n    xhr.onerror = function (event)\n    {\n        if (errorCallback)\n        {\n            akeeba.Ajax.triggerCallbacks(errorCallback, xhr, \"error\", null);\n        }\n    };\n\n    // IE 8 is a pain the butt\n    if (window.attachEvent && !window.addEventListener)\n    {\n        xhr.onreadystatechange = function ()\n        {\n            if (this.readyState === 4)\n            {\n                var status = akeeba.Ajax.xhrSuccessStatus[this.status] || this.status;\n\n                if (status >= 200 && status < 400)\n                {\n                    // Success!\n                    xhr.onload();\n                }\n                else\n                {\n                    xhr.onerror();\n                }\n            }\n        };\n    }\n\n    // --- Set the timeout handler\n    xhr.ontimeout = function ()\n    {\n        if (errorCallback)\n        {\n            akeeba.Ajax.triggerCallbacks(errorCallback, xhr, \"timeout\", null);\n        }\n    };\n\n    // --- Set the abort handler\n    xhr.onabort = function ()\n    {\n        if (errorCallback)\n        {\n            akeeba.Ajax.triggerCallbacks(errorCallback, xhr, \"abort\", null);\n        }\n    };\n\n    // --- Apply the timeout before running the request\n    var timeout = (typeof (parameters.timeout) == \"undefined\") ? 600000 : parameters.timeout;\n\n    if (timeout > 0)\n    {\n        xhr.timeout = timeout;\n    }\n\n    // --- Call the beforeSend event handler. If it returns false the request is canceled.\n    if (typeof (parameters.beforeSend) != \"undefined\")\n    {\n        if (parameters.beforeSend(xhr, parameters) === false)\n        {\n            return;\n        }\n    }\n\n    xhr.send(sendData);\n};\n\n/**\n * Adds an AJAX request to the request queue and begins processing the queue if it's not already started. The request\n * queue is a FIFO buffer. Each request will be executed as soon as the one preceding it has completed processing\n * (successfully or otherwise).\n *\n * It's the same syntax as .ajax() with the difference that the request is queued instead of executed right away.\n *\n * @param   url         {string}  The URL to send the request to\n * @param   parameters  {object}  Configuration parameters\n */\nakeeba.Ajax.enqueue = function (url, parameters)\n{\n    // Handles jQuery 1.0 calling style of .ajax(parameters), passing the URL as a property of the parameters object\n    if (typeof (parameters) == \"undefined\")\n    {\n        parameters = url;\n        url        = parameters.url;\n    }\n\n    parameters.url = url;\n    akeeba.Ajax.requestArray.push(parameters);\n\n    akeeba.Ajax.processQueue();\n};\n\n/**\n * Converts a simple object containing query string parameters to a single, escaped query string\n *\n * @param    object   {object}  A plain object containing the query parameters to pass\n * @param    prefix   {string}  Prefix for array-type parameters\n *\n * @returns  {string}\n *\n * @access  private\n */\nakeeba.Ajax.interpolateParameters = function (object, prefix)\n{\n    prefix            = prefix || \"\";\n    var encodedString = \"\";\n\n    for (var prop in object)\n    {\n        if (object.hasOwnProperty(prop))\n        {\n            if (encodedString.length > 0)\n            {\n                encodedString += \"&\";\n            }\n\n            if (typeof object[prop] !== \"object\")\n            {\n                if (prefix === \"\")\n                {\n                    encodedString += encodeURIComponent(prop) + \"=\" + encodeURIComponent(object[prop]);\n                }\n                else\n                {\n                    encodedString +=\n                        encodeURIComponent(prefix) + \"[\" + encodeURIComponent(prop) + \"]=\" + encodeURIComponent(\n                            object[prop]);\n                }\n\n                continue;\n            }\n\n            // Objects need special handling\n            encodedString += akeeba.Ajax.interpolateParameters(object[prop], prop);\n        }\n    }\n    return encodedString;\n};\n\n/**\n * Goes through a list of callbacks and calls them in succession. Accepts a variable number of arguments.\n */\nakeeba.Ajax.triggerCallbacks = function ()\n{\n    // converts arguments to real array\n    var args         = Array.prototype.slice.call(arguments);\n    var callbackList = args.shift();\n\n    if (typeof (callbackList) == \"function\")\n    {\n        return callbackList.apply(null, args);\n    }\n\n    if (callbackList instanceof Array)\n    {\n        for (var i = 0; i < callbackList.length; i++)\n        {\n            var callBack = callbackList[i];\n\n            if (callBack.apply(null, args) === false)\n            {\n                return false;\n            }\n        }\n    }\n\n    return null;\n};\n\n/**\n * This helper function triggers the request queue processing using a short (50 msec) timer. This prevents a long\n * function nesting which could cause some browser to abort processing.\n *\n * @access  private\n */\nakeeba.Ajax.processQueueHelper = function ()\n{\n    akeeba.Ajax.processingQueue = false;\n\n    setTimeout(akeeba.Ajax.processQueue, 50);\n};\n\n/**\n * Processes the request queue\n *\n * @access  private\n */\nakeeba.Ajax.processQueue = function ()\n{\n    // If I don't have any more requests reset and return\n    if (!akeeba.Ajax.requestArray.length)\n    {\n        akeeba.Ajax.processingQueue = false;\n        return;\n    }\n\n    // If I am already processing an AJAX request do nothing (I will be called again when the request completes)\n    if (akeeba.Ajax.processingQueue)\n    {\n        return;\n    }\n\n    // Extract the URL from the parameters\n    var parameters = akeeba.Ajax.requestArray.shift();\n    var url        = parameters.url;\n\n    /**\n     * Add our queue processing helper to the top of the success and error callback function stacks, ensuring that we\n     * will process the next request in the queue as soon as the previous one completes (successfully or not)\n     */\n    var successCallback = (typeof (parameters.success) == \"undefined\") ? [] : parameters.success;\n    var errorCallback   = (typeof (parameters.error) == \"undefined\") ? [] : parameters.error;\n\n    if ((typeof (successCallback) != \"object\") || !(successCallback instanceof Array))\n    {\n        successCallback = [successCallback];\n    }\n\n    if ((typeof (errorCallback) != \"object\") || !(errorCallback instanceof Array))\n    {\n        errorCallback = [errorCallback];\n    }\n\n    successCallback.unshift(akeeba.Ajax.processQueueHelper);\n    errorCallback.unshift(akeeba.Ajax.processQueueHelper);\n\n    parameters.success = successCallback;\n    parameters.error   = errorCallback;\n\n    // Mark the queue as currently being processed, blocking further requests until this one completes\n    akeeba.Ajax.processingQueue = true;\n\n    // Perform the actual request\n    akeeba.Ajax.ajax(url, parameters);\n};\n"]}