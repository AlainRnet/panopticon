{"version":3,"file":"gui-helpers.min.js","names":["akeeba","JSON","_typeof","f","n","this_value","valueOf","quote","string","rx_escapable","lastIndex","test","replace","a","c","meta","charCodeAt","toString","slice","str","key","holder","i","k","v","length","partial","mind","gap","value","toJSON","rep","call","isFinite","indent","Object","prototype","apply","join","push","hasOwnProperty","rx_one","rx_two","rx_three","rx_four","rx_dangerous","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Boolean","Number","String","stringify","\"\b\"","\"\t\"","\"\\n\"","\"\f\"","\"\\r\"","'\"'","\"\\\\\"","replacer","space","Error","\"\"","parse","text","reviver","walk","j","eval","SyntaxError","Math","uuid","CHARS","len","radix","chars","random","r","basename","path","suffix","b","substr","number_format","number","decimals","dec_point","thousands_sep","isNaN","abs","d","t","s","parseInt","toFixed","size_format","filesize","empty","mixed_var","ltrim","charlist","re","RegExp","array_shift","inputArr","shift","trim","whitespace","l","indexOf","charAt","substring","array_merge","args","Array","arguments","retObj","retArr","concat","ct","array_diff","arr1","argl","k1","arr","arr1keys","keys","hasDontEnumBug","propertyIsEnumerable","dontEnums","dontEnumsLength","obj","TypeError","prop","result","is_array","getFuncName","fn","name","exec","php_js","ini","local_value","toLowerCase","constructor","escapeHTML","rawData","split"],"sources":["gui-helpers.js"],"sourcesContent":["/*\n * @package   panopticon\n * @copyright Copyright (c)2023-2023 Nicholas K. Dionysopoulos / Akeeba Ltd\n * @license   GNU General Public License version 3, or later\n */\n\nif (typeof (akeeba) === \"undefined\")\n{\n    var akeeba = {};\n}\n\n/*\n *\thttps://raw.githubusercontent.com/douglascrockford/JSON-js/master/json2.js\n *  2016-05-01\n *  Public Domain.\n *  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n *  See http://www.JSON.org/js.html\n */\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nif (typeof JSON !== \"object\")\n{\n    JSON = {};\n}\n\n(function ()\n{\n    \"use strict\";\n\n    var rx_one       = /^[\\],:{}\\s]*$/;\n    var rx_two       = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n    var rx_three     = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n    var rx_four      = /(?:^|:|,)(?:\\s*\\[)+/g;\n    var rx_escapable = /[\\\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n    var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n    function f(n)\n    {\n        // Format integers to have at least two digits.\n        return n < 10 ? \"0\" + n : n;\n    }\n\n    function this_value()\n    {\n        return this.valueOf();\n    }\n\n    if (typeof Date.prototype.toJSON !== \"function\")\n    {\n\n        Date.prototype.toJSON = function ()\n        {\n\n            return isFinite(this.valueOf()) ? this.getUTCFullYear() + \"-\" + f(this.getUTCMonth() + 1) + \"-\" + f(\n                this.getUTCDate()) + \"T\" + f(this.getUTCHours()) + \":\" + f(this.getUTCMinutes()) + \":\" + f(\n                this.getUTCSeconds()) + \"Z\" : null;\n        };\n\n        Boolean.prototype.toJSON = this_value;\n        Number.prototype.toJSON  = this_value;\n        String.prototype.toJSON  = this_value;\n    }\n\n    var gap;\n    var indent;\n    var meta;\n    var rep;\n\n\n    function quote(string)\n    {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        rx_escapable.lastIndex = 0;\n        return rx_escapable.test(string) ? \"\\\"\" + string.replace(rx_escapable, function (a)\n        {\n            var c = meta[a];\n            return typeof c === \"string\" ? c : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + \"\\\"\" : \"\\\"\" + string + \"\\\"\";\n    }\n\n\n    function str(key, holder)\n    {\n\n// Produce a string from holder[key].\n\n        var i;          // The loop counter.\n        var k;          // The member key.\n        var v;          // The member value.\n        var length;\n        var mind  = gap;\n        var partial;\n        var value = holder[key];\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === \"object\" && typeof value.toJSON === \"function\")\n        {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === \"function\")\n        {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value)\n        {\n            case \"string\":\n                return quote(value);\n\n            case \"number\":\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n                return isFinite(value) ? String(value) : \"null\";\n\n            case \"boolean\":\n            case \"null\":\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce \"null\". The case is included here in\n// the remote chance that this gets fixed someday.\n\n                return String(value);\n\n// If the type is \"object\", we might be dealing with an object or an array or\n// null.\n\n            case \"object\":\n\n// Due to a specification blunder in ECMAScript, typeof null is \"object\",\n// so watch out for that case.\n\n                if (!value)\n                {\n                    return \"null\";\n                }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n                gap += indent;\n                partial = [];\n\n// Is the value an array?\n\n                if (Object.prototype.toString.apply(value) === \"[object Array]\")\n                {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                    length = value.length;\n                    for (i = 0; i < length; i += 1)\n                    {\n                        partial[i] = str(i, value) || \"null\";\n                    }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                    v   =\n                        partial.length === 0 ? \"[]\" : gap ? \"[\\n\" + gap + partial.join(\n                            \",\\n\" + gap) + \"\\n\" + mind + \"]\" : \"[\" + partial.join(\",\") + \"]\";\n                    gap = mind;\n                    return v;\n                }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n                if (rep && typeof rep === \"object\")\n                {\n                    length = rep.length;\n                    for (i = 0; i < length; i += 1)\n                    {\n                        if (typeof rep[i] === \"string\")\n                        {\n                            k = rep[i];\n                            v = str(k, value);\n                            if (v)\n                            {\n                                partial.push(quote(k) + (gap ? \": \" : \":\") + v);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                    for (k in value)\n                    {\n                        if (Object.prototype.hasOwnProperty.call(value, k))\n                        {\n                            v = str(k, value);\n                            if (v)\n                            {\n                                partial.push(quote(k) + (gap ? \": \" : \":\") + v);\n                            }\n                        }\n                    }\n                }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n                v   =\n                    partial.length === 0 ? \"{}\" : gap ? \"{\\n\" + gap + partial.join(\n                        \",\\n\" + gap) + \"\\n\" + mind + \"}\" : \"{\" + partial.join(\",\") + \"}\";\n                gap = mind;\n                return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== \"function\")\n    {\n        meta           = {    // table of character substitutions\n            \"\\b\": \"\\\\b\", \"\\t\": \"\\\\t\", \"\\n\": \"\\\\n\", \"\\f\": \"\\\\f\", \"\\r\": \"\\\\r\", \"\\\"\": \"\\\\\\\"\", \"\\\\\": \"\\\\\\\\\"\n        };\n        JSON.stringify = function (value, replacer, space)\n        {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap    = \"\";\n            indent = \"\";\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === \"number\")\n            {\n                for (i = 0; i < space; i += 1)\n                {\n                    indent += \" \";\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            }\n            else if (typeof space === \"string\")\n            {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== \"function\" && (typeof replacer !== \"object\" || typeof replacer.length !== \"number\"))\n            {\n                throw new Error(\"JSON.stringify\");\n            }\n\n// Make a fake root object containing our value under the key of \"\".\n// Return the result of stringifying the value.\n\n            return str(\"\", {\"\": value});\n        };\n    }\n\n\n// If the JSON object does not yet have a parse method, give it one.\n\n    if (typeof JSON.parse !== \"function\")\n    {\n        JSON.parse = function (text, reviver)\n        {\n\n// The parse method takes a text and an optional reviver function, and returns\n// a JavaScript value if the text is a valid JSON text.\n\n            var j;\n\n            function walk(holder, key)\n            {\n\n// The walk method is used to recursively walk the resulting structure so\n// that modifications can be made.\n\n                var k;\n                var v;\n                var value = holder[key];\n                if (value && typeof value === \"object\")\n                {\n                    for (k in value)\n                    {\n                        if (Object.prototype.hasOwnProperty.call(value, k))\n                        {\n                            v = walk(value, k);\n                            if (v !== undefined)\n                            {\n                                value[k] = v;\n                            }\n                            else\n                            {\n                                delete value[k];\n                            }\n                        }\n                    }\n                }\n                return reviver.call(holder, key, value);\n            }\n\n\n// Parsing happens in four stages. In the first stage, we replace certain\n// Unicode characters with escape sequences. JavaScript handles many characters\n// incorrectly, either silently deleting them, or treating them as line endings.\n\n            text                   = String(text);\n            rx_dangerous.lastIndex = 0;\n            if (rx_dangerous.test(text))\n            {\n                text = text.replace(rx_dangerous, function (a)\n                {\n                    return \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n                });\n            }\n\n// In the second stage, we run the text against regular expressions that look\n// for non-JSON patterns. We are especially concerned with \"()\" and \"new\"\n// because they can cause invocation, and \"=\" because it can cause mutation.\n// But just to be safe, we want to reject all unexpected forms.\n\n// We split the second stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace the JSON backslash pairs with \"@\" (a non-JSON character). Second, we\n// replace all simple value tokens with \"]\" characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or \"]\" or\n// \",\" or \":\" or \"{\" or \"}\". If that is so, then the text is safe for eval.\n\n            if (rx_one.test(text\n                .replace(rx_two, \"@\")\n                .replace(rx_three, \"]\")\n                .replace(rx_four, \"\")))\n            {\n\n// In the third stage we use the eval function to compile the text into a\n// JavaScript structure. The \"{\" operator is subject to a syntactic ambiguity\n// in JavaScript: it can begin a block or an object literal. We wrap the text\n// in parens to eliminate the ambiguity.\n\n                j = eval(\"(\" + text + \")\");\n\n// In the optional fourth stage, we recursively walk the new structure, passing\n// each name/value pair to a reviver function for possible transformation.\n\n                return (typeof reviver === \"function\") ? walk({\"\": j}, \"\") : j;\n            }\n\n// If the text is not JSON parseable, then a SyntaxError is thrown.\n\n            throw new SyntaxError(\"JSON.parse\");\n        };\n    }\n}());\n\n/*!\n Math.uuid.js (v1.4)\n http://www.broofa.com\n mailto:robert@broofa.com\n\n Copyright (c) 2009 Robert Kieffer\n Dual licensed under the MIT and GPL licenses.\n\n Usage: Math.uuid()\n */\nMath.uuid = (function ()\n{\n    // Private array of chars to use\n    var CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n\n    return function (len, radix)\n    {\n        var chars = CHARS, uuid = [];\n        radix     = radix || chars.length;\n\n        if (len)\n        {\n            // Compact form\n            for (var i = 0; i < len; i++)\n            {\n                uuid[i] = chars[0 | Math.random() * radix];\n            }\n        }\n        else\n        {\n            // rfc4122, version 4 form\n            var r;\n\n            // rfc4122 requires these characters\n            uuid[8]  = uuid[13] = uuid[18] = uuid[23] = \"-\";\n            uuid[14] = \"4\";\n\n            // Fill in random data.  At i==19 set the high bits of clock sequence as\n            // per rfc4122, sec. 4.1.5\n            for (var i = 0; i < 36; i++)\n            {\n                if (!uuid[i])\n                {\n                    r       = 0 | Math.random() * 16;\n                    uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n                }\n            }\n        }\n\n        return uuid.join(\"\");\n    };\n})();\n\n/*\n * Courtesy of PHPjs -- http://phpjs.org\n * @license GPL, version 2\n */\nfunction basename(path, suffix)\n{\n    var b = path.replace(/^.*[\\/\\\\]/g, \"\");\n    if (typeof (suffix) == \"string\" && b.substr(b.length - suffix.length) == suffix)\n    {\n        b = b.substr(0, b.length - suffix.length);\n    }\n    return b;\n}\n\nfunction number_format(number, decimals, dec_point, thousands_sep)\n{\n    var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n    var d = dec_point == undefined ? \",\" : dec_point;\n    var t = thousands_sep == undefined ? \".\" : thousands_sep, s = n < 0 ? \"-\" : \"\";\n    var i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + \"\", j = (j = i.length) > 3 ? j % 3 : 0;\n\n    return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(\n        n - i).toFixed(c).slice(2) : \"\");\n}\n\nfunction size_format(filesize)\n{\n    if (filesize >= 1073741824)\n    {\n        filesize = number_format(filesize / 1073741824, 2, \".\", \"\") + \" GB\";\n    }\n    else\n    {\n        if (filesize >= 1048576)\n        {\n            filesize = number_format(filesize / 1048576, 2, \".\", \"\") + \" MB\";\n        }\n        else\n        {\n            filesize = number_format(filesize / 1024, 2, \".\", \"\") + \" KB\";\n        }\n    }\n    return filesize;\n}\n\n/**\n * Checks if a varriable is empty. From the php.js library.\n */\nfunction empty(mixed_var)\n{\n    var key;\n\n    if (mixed_var === \"\" || mixed_var === 0 || mixed_var === \"0\" || mixed_var === null || mixed_var === false || typeof mixed_var === \"undefined\")\n    {\n        return true;\n    }\n\n    if (typeof mixed_var == \"object\")\n    {\n        for (key in mixed_var)\n        {\n            return false;\n        }\n        return true;\n    }\n\n    return false;\n}\n\nfunction ltrim(str, charlist)\n{\n    // Strips whitespace from the beginning of a string\n    //\n    // version: 1008.1718\n    // discuss at: http://phpjs.org/functions/ltrim    // +   original by: Kevin van Zonneveld\n    // (http://kevin.vanzonneveld.net) +      input by: Erkekjetter +   improved by: Kevin van Zonneveld\n    // (http://kevin.vanzonneveld.net) +   bugfixed by: Onno Marsman *     example 1: ltrim('    Kevin van Zonneveld\n    // ');    // *     returns 1: 'Kevin van Zonneveld    '\n    charlist = !charlist ? \" \\\\s\\u00A0\" : (charlist + \"\").replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, \"$1\");\n    var re   = new RegExp(\"^[\" + charlist + \"]+\", \"g\");\n    return (str + \"\").replace(re, \"\");\n}\n\nfunction array_shift(inputArr)\n{\n    // http://kevin.vanzonneveld.net\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: Martijn Wieringa\n    // %        note 1: Currently does not handle objects\n    // *     example 1: array_shift(['Kevin', 'van', 'Zonneveld']);\n    // *     returns 1: 'Kevin'\n\n    var props = false, shift = undefined, pr = \"\", allDigits = /^\\d$/, int_ct = -1,\n        _checkToUpIndices                                                     = function (arr, ct, key)\n        {\n            // Deal with situation, e.g., if encounter index 4 and try to set it to 0, but 0 exists later in loop (need\n            // to increment all subsequent (skipping current key, since we need its value below) until find unused)\n            if (arr[ct] !== undefined)\n            {\n                var tmp = ct;\n                ct += 1;\n                if (ct === key)\n                {\n                    ct += 1;\n                }\n                ct      = _checkToUpIndices(arr, ct, key);\n                arr[ct] = arr[tmp];\n                delete arr[tmp];\n            }\n            return ct;\n        };\n\n\n    if (inputArr.length === 0)\n    {\n        return null;\n    }\n    if (inputArr.length > 0)\n    {\n        return inputArr.shift();\n    }\n}\n\nfunction trim(str, charlist)\n{\n    var whitespace, l = 0, i = 0;\n    str += \"\";\n\n    if (!charlist)\n    {\n        // default list\n        whitespace =\n            \" \\n\\r\\t\\f\\x0b\\xa0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000\";\n    }\n    else\n    {\n        // preg_quote custom list\n        charlist += \"\";\n        whitespace = charlist.replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, \"$1\");\n    }\n\n    l = str.length;\n    for (i = 0; i < l; i++)\n    {\n        if (whitespace.indexOf(str.charAt(i)) === -1)\n        {\n            str = str.substring(i);\n            break;\n        }\n    }\n\n    l = str.length;\n    for (i = l - 1; i >= 0; i--)\n    {\n        if (whitespace.indexOf(str.charAt(i)) === -1)\n        {\n            str = str.substring(0, i + 1);\n            break;\n        }\n    }\n\n    return whitespace.indexOf(str.charAt(0)) === -1 ? str : \"\";\n}\n\nfunction array_merge()\n{\n    // Merges elements from passed arrays into one array\n    //\n    // version: 1103.1210\n    // discuss at: http://phpjs.org/functions/array_merge\n    // +   original by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Nate\n    // +   input by: josh\n    // +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n    // *     example 1: arr1 = {\"color\": \"red\", 0: 2, 1: 4}\n    // *     example 1: arr2 = {0: \"a\", 1: \"b\", \"color\": \"green\", \"shape\": \"trapezoid\", 2: 4}\n    // *     example 1: array_merge(arr1, arr2)\n    // *     returns 1: {\"color\": \"green\", 0: 2, 1: 4, 2: \"a\", 3: \"b\", \"shape\": \"trapezoid\", 4: 4}\n    // *     example 2: arr1 = []\n    // *     example 2: arr2 = {1: \"data\"}\n    // *     example 2: array_merge(arr1, arr2)\n    // *     returns 2: {0: \"data\"}\n    var args = Array.prototype.slice.call(arguments), retObj = {}, k, j = 0, i = 0, retArr = true;\n\n    for (i = 0; i < args.length; i++)\n    {\n        if (!(args[i] instanceof Array))\n        {\n            retArr = false;\n            break;\n        }\n    }\n\n    if (retArr)\n    {\n        retArr = [];\n        for (i = 0; i < args.length; i++)\n        {\n            retArr = retArr.concat(args[i]);\n        }\n        return retArr;\n    }\n    var ct = 0;\n\n    for (i = 0, ct = 0; i < args.length; i++)\n    {\n        if (args[i] instanceof Array)\n        {\n            for (j = 0; j < args[i].length; j++)\n            {\n                retObj[ct++] = args[i][j];\n            }\n        }\n        else\n        {\n            for (k in args[i])\n            {\n                if (args[i].hasOwnProperty(k))\n                {\n                    if (parseInt(k, 10) + \"\" === k)\n                    {\n                        retObj[ct++] = args[i][k];\n                    }\n                    else\n                    {\n                        retObj[k] = args[i][k];\n                    }\n                }\n            }\n        }\n    }\n    return retObj;\n}\n\nfunction array_diff(arr1)\n{ // eslint-disable-line camelcase\n    //  discuss at: http://locutus.io/php/array_diff/\n    // original by: Kevin van Zonneveld (http://kvz.io)\n    // improved by: Sanjoy Roy\n    //  revised by: Brett Zamir (http://brett-zamir.me)\n    //   example 1: array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld'])\n    //   returns 1: {0:'Kevin'}\n\n    var retArr = {};\n    var argl   = arguments.length;\n    var k1     = \"\";\n    var i      = 1;\n    var k      = \"\";\n    var arr    = {};\n\n    arr1keys: for (k1 in arr1)\n    {\n        for (i = 1; i < argl; i++)\n        {\n            arr = arguments[i];\n            for (k in arr)\n            {\n                if (arr[k] === arr1[k1])\n                {\n                    // If it reaches here, it was found in at least one array, so try next value\n                    continue arr1keys;\n                }\n            }\n            retArr[k1] = arr1[k1];\n        }\n    }\n\n    return retArr\n}\n\n//=============================================================================\n// Object.keys polyfill\n//=============================================================================\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\nif (!Object.keys)\n{\n    Object.keys = (function ()\n    {\n        \"use strict\";\n        var hasOwnProperty                                                                   = Object.prototype.hasOwnProperty,\n            hasDontEnumBug = !({toString: null}).propertyIsEnumerable(\"toString\"), dontEnums = [\n                \"toString\",\n                \"toLocaleString\",\n                \"valueOf\",\n                \"hasOwnProperty\",\n                \"isPrototypeOf\",\n                \"propertyIsEnumerable\",\n                \"constructor\"\n            ], dontEnumsLength                                                               = dontEnums.length;\n\n        return function (obj)\n        {\n            if (typeof obj !== \"object\" && (typeof obj !== \"function\" || obj === null))\n            {\n                throw new TypeError(\"Object.keys called on non-object\");\n            }\n\n            var result = [], prop, i;\n\n            for (prop in obj)\n            {\n                if (hasOwnProperty.call(obj, prop))\n                {\n                    result.push(prop);\n                }\n            }\n\n            if (hasDontEnumBug)\n            {\n                for (i = 0; i < dontEnumsLength; i++)\n                {\n                    if (hasOwnProperty.call(obj, dontEnums[i]))\n                    {\n                        result.push(dontEnums[i]);\n                    }\n                }\n            }\n            return result;\n        };\n    }());\n}\n\n/**\n * Is the variable an array?\n *\n * Part of php.js\n *\n * @see  http://phpjs.org/\n *\n * @param   mixed_var  {mixed}  The variable\n *\n * @returns  boolean  True if it is an array or an object\n */\nfunction is_array(mixed_var)\n{\n    var key         = \"\";\n    var getFuncName = function (fn)\n    {\n        var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn);\n\n        if (!name)\n        {\n            return \"(Anonymous)\";\n        }\n\n        return name[1];\n    };\n\n    if (!mixed_var)\n    {\n        return false;\n    }\n\n    // BEGIN REDUNDANT\n    this.php_js     = this.php_js || {};\n    this.php_js.ini = this.php_js.ini || {};\n    // END REDUNDANT\n\n    if (typeof mixed_var === \"object\")\n    {\n        if (this.php_js.ini[\"phpjs.objectsAsArrays\"] &&  // Strict checking for being a JavaScript array (only check this way if\n            // call ini_set('phpjs.objectsAsArrays', 0) to disallow objects as arrays)\n            ((this.php_js.ini[\"phpjs.objectsAsArrays\"].local_value.toLowerCase && this.php_js.ini[\"phpjs.objectsAsArrays\"].local_value.toLowerCase() === \"off\") || parseInt(\n                this.php_js.ini[\"phpjs.objectsAsArrays\"].local_value, 10) === 0))\n        {\n            return mixed_var.hasOwnProperty(\"length\") && // Not non-enumerable because of being on parent class\n                !mixed_var.propertyIsEnumerable(\"length\") && // Since is own property, if not enumerable, it must be a\n                // built-in function\n                getFuncName(mixed_var.constructor) !== \"String\"; // exclude String()\n        }\n\n        if (mixed_var.hasOwnProperty)\n        {\n            for (key in mixed_var)\n            {\n                // Checks whether the object has the specified property\n                // if not, we figure it's not an object in the sense of a php-associative-array.\n                if (false === mixed_var.hasOwnProperty(key))\n                {\n                    return false;\n                }\n            }\n        }\n\n        // Read discussion at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_is_array/\n        return true;\n    }\n\n    return false;\n}\n\nfunction escapeHTML(rawData)\n{\n    return rawData.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n}\n"],"mappings":"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"}