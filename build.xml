<?xml version="1.0"?>

<project name="panopticon" description="Akeeba Panopticon" default="git">
    <import file="${phing.dir}/../buildfiles/phing/common.xml"/>

    <!-- Override properties set up in common.xml -->
    <property name="dirs.root" value="${phing.dir}" override="true" />
    <property name="dirs.phpapp" value="app" override="true" />
    <property name="dirs.release" value="${dirs.root}/release" override="true" />
    <property name="dirs.templates" value="${phing.dir}/build/templates" override="true" />
    <property name="dirs.component" value="${phing.dir}/component" override="true" />
    <property name="dirs.modules" value="${phing.dir}/modules" override="true" />
    <property name="dirs.plugins" value="${phing.dir}/plugins" override="true" />
    <property name="dirs.documentation" value="${phing.dir}/documentation" override="true" />

    <!-- Load externally defined properties -->
    <property file="${phing.dir.common}/default.properties" override="true" />
    <property file="${phing.dir}/../build.properties" override="true" />
    <property file="${phing.dir}/../build.${host.os}.properties" override="true" />
    <property file="${phing.dir}/build/build.properties" override="true" />
    <property file="${phing.dir}/build/override.properties" override="true" />
    <property file="${phing.dir}/build.properties" override="true" />
    <property file="${phing.dir}/override.properties" override="true" />

    <!--
    ====================================================================================================
    File sets
    ====================================================================================================
    -->
    <fileset dir="${dirs.phpapp}" id="app" expandsymboliclinks="true">
        <include name="**" />

        <!-- Do not copy the configuration -->
        <exclude name="config.php" />

        <!-- Exclude SCSS -->
        <exclude name="media/scss/**" />

        <!-- Exclude map files -->
        <exclude name="media/css/*.map" />
        <exclude name="media/js/*.map" />

        <!-- Exclude cache, log, tmp files -->
        <exclude name="cache/**" />
        <exclude name="log/**" />
        <exclude name="tmp/**" />
        <include name="cache/.htaccess" />
        <include name="cache/web.config" />
        <include name="log/.htaccess" />
        <include name="log/web.config" />
        <include name="tmp/.htaccess" />
        <include name="tmp/web.config" />

        <!-- Clean up Composer vendor folder -->
        <exclude name="vendor/akeeba/awf/src/Database/Driver/None.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Driver/Pgsql.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Driver/Postgresql.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Driver/Sqlazure.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Driver/Sqlite.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Driver/Sqlsrv.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Query/Pgsql.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Query/Postgresql.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Query/Sqlazure.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Query/Sqlite.php" />
        <exclude name="vendor/akeeba/awf/src/Database/Query/Sqlsrv.php" />
        <exclude name="vendor/akeeba/awf/src/Encrypt/AesAdapter/Mcrypt.php" />
        <exclude name="vendor/akeeba/awf/tests/**" />
        <exclude name="vendor/akeeba/awf/.gitattributes" />
        <exclude name="vendor/akeeba/awf/.gitignore" />
        <exclude name="vendor/akeeba/awf/.travis.yml" />
        <exclude name="vendor/akeeba/awf/composer.lock" />
        <exclude name="vendor/akeeba/awf/phpunit*" />

        <exclude name="vendor/akeeba/remotecli/build/**" />
        <exclude name="vendor/akeeba/remotecli/documentation/**" />
        <exclude name="vendor/akeeba/remotecli/.gitattributes" />
        <exclude name="vendor/akeeba/remotecli/.gitignore" />
        <exclude name="vendor/akeeba/remotecli/CHANGELOG" />
        <exclude name="vendor/akeeba/remotecli/composer.lock" />
        <exclude name="vendor/akeeba/remotecli/DESCRIPTION*" />
        <exclude name="vendor/akeeba/remotecli/Dockerfile" />
        <exclude name="vendor/akeeba/remotecli/RELEASENOTES*" />

        <exclude name="vendor/bin/**" />

        <exclude name="vendor/dragonmantank/cron-expression/CHAMGELOG*" />
        <exclude name="vendor/dragonmantank/cron-expression/phpstan*" />

        <exclude name="vendor/joomla/data/.editorconfig" />
        <exclude name="vendor/joomla/data/ruleset.xml" />
        <exclude name="vendor/joomla/data/SECURITY.md" />

        <exclude name="vendor/joomla/filesystem/.editorconfig" />
        <exclude name="vendor/joomla/filesystem/ruleset.xml" />
        <exclude name="vendor/joomla/filesystem/SECURITY.md" />

        <exclude name="vendor/joomla/http/.drone*" />
        <exclude name="vendor/joomla/http/.editorconfig" />
        <exclude name="vendor/joomla/http/SECURITY.md" />

        <exclude name="vendor/joomla/registry/.github/***" />
        <exclude name="vendor/joomla/registry/docs/***" />
        <exclude name="vendor/joomla/registry/tests/***" />
        <exclude name="vendor/joomla/registry/.editorconfig" />
        <exclude name="vendor/joomla/registry/phpunit*" />
        <exclude name="vendor/joomla/registry/ruleset*" />
        <exclude name="vendor/joomla/registry/SECURITY.md" />

        <exclude name="vendor/joomla/string/.github/***" />
        <exclude name="vendor/joomla/string/Tests/***" />
        <exclude name="vendor/joomla/string/.drone*" />
        <exclude name="vendor/joomla/string/.editorconfig" />
        <exclude name="vendor/joomla/string/phpunit*" />
        <exclude name="vendor/joomla/string/ruleset*" />
        <exclude name="vendor/joomla/string/SECURITY.md" />

        <exclude name="vendor/joomla/uri/.github/***" />
        <exclude name="vendor/joomla/uri/tests/***" />
        <exclude name="vendor/joomla/uri/.drone*" />
        <exclude name="vendor/joomla/uri/.editorconfig" />
        <exclude name="vendor/joomla/uri/phpunit*" />
        <exclude name="vendor/joomla/uri/ruleset*" />
        <exclude name="vendor/joomla/uri/SECURITY.md" />

        <!--
        <exclude name="vendor/nelexa/zip/.php-cs-fixed.php" />
        <exclude name="vendor/nelexa/zip/.phpstorm.meta.php" />
        <exclude name="vendor/nelexa/zip/README.RU.md" />
        -->

        <exclude name="vendor/psr/http-factory/.gitignore" />
        <exclude name="vendor/psr/http-factory/.pullapprove.yml" />

        <exclude name="vendor/symfony/deprecation-contracts/.gitignore" />

        <!--
        <exclude name="vendor/wapmorgan/unified-archive/bin/**" />
        <exclude name="vendor/wapmorgan/unified-archive/docs/**" />
        -->
    </fileset>

    <!--
    ====================================================================================================
    Tasks - General
    ====================================================================================================
    -->
    <target name="git" description="Makes only packages, not the documentation"
            depends="new-release,setup-properties,compile-css,compile-javascript,app-package">
    </target>

    <target name="git-app" description="Makes only the application package"
            depends="new-release,setup-properties,compile-css,compile-javascript,app-package">
    </target>

    <target name="new-release" depends="composer-install,npm-install,link">
        <echo>Emptying release directory</echo>
        <delete dir="${dirs.release}" quiet="true" includeemptydirs="true"/>
        <mkdir dir="${dirs.release}"/>

        <!-- The vendor folder may have been created afresh; copy the .htaccess and web.config files into it -->
        <echo>Copying .htaccess and web.config into the vendor folder</echo>
        <copy todir="${dirs.phpapp}/vendor">
            <fileset dir="${dirs.phpapp}/src">
                <include name=".htaccess" />
                <include name="web.config" />
            </fileset>
        </copy>

        <!-- Bootstrap may have been updated. Copy its JS files. Bootstrap's SCSS is handled by compile-css. -->
        <echo>Copying Bootstrap JavaScript files</echo>
        <copy todir="${dirs.phpapp}/media/js">
            <fileset dir="${dirs.root}/node_modules/bootstrap/dist/js">
                <include name="bootstrap.bundle.*" />
            </fileset>
        </copy>

        <!-- FontAwesome -->
        <echo>Copying FontAwesome files</echo>
        <copy file="${dirs.root}/node_modules/@fortawesome/fontawesome-free/css/all.css" tofile="${dirs.phpapp}/media/css/fontawesome.css" />
        <copy file="${dirs.root}/node_modules/@fortawesome/fontawesome-free/css/all.min.css" tofile="${dirs.phpapp}/media/css/fontawesome.min.css" />
        <copy todir="${dirs.phpapp}/media/webfonts">
            <fileset dir="${dirs.root}/node_modules/@fortawesome/fontawesome-free/webfonts">
                <include name="fa-brands-400.woff2" />
                <include name="fa-regular-400.woff2" />
                <include name="fa-solid-900.woff2" />
            </fileset>
        </copy>

        <echo>Copying LICENSE.txt</echo>
        <copy file="${dirs.root}/LICENSE.txt" tofile="${dirs.phpapp}/LICENSE.txt" />

        <echo>Removing .DS_Store files</echo>
        <exec command="sh killDS.sh" dir="${dirs.root}"/>
    </target>

    <target name="setup-properties" description="Set up version and build properties">
        <!-- Initialize the build.date timestamp -->
        <tstamp>
            <format property="build.date" pattern="%Y-%m-%d"/>
        </tstamp>

        <!-- Initialize the version if it's not set -->
        <if>
            <equals arg1="${version}" arg2="git" />
            <then>
                <autoversion workingCopy="${dirs.root}" propertyName="version" />
            </then>
        </if>

        <filterchain id="standard-tokens">
            <replacetokens begintoken="##" endtoken="##">
                <token key="DATE" value="${build.date}"/>
                <token key="VERSION" value="${version}"/>
                <token key="PRO" value="1"/>
            </replacetokens>
        </filterchain>
    </target>

    <target name="npm-install" description="Install the NPM dev dependencies">
        <echo>Installing NPM dev dependencies</echo>
        <exec executable="npm" dir="${dirs.root}" checkreturn="true">
            <arg value="install" />
        </exec>
    </target>

    <target name="compile-javascript" description="Transpile and minify JavaScript files">
        <echo>Minifying JavaScript files</echo>
        <exec executable="npx" dir="${dirs.root}" checkreturn="true">
            <arg value="babel" />

            <arg value="${dirs.phpapp}/media/js" />

            <arg value="--out-dir" />
            <arg value="${dirs.phpapp}/media/js" />

            <arg value="--out-file-extension" />
            <arg value=".min.js" />

            <arg value="--source-maps" />
        </exec>
    </target>

    <target name="compile-css" description="Compile SCSS to minified CSS">
        <echo>Compiling SCSS into CSS</echo>
        <foreach param="filename" target="sass-apply">
            <fileset dir="${dirs.phpapp}/media/scss">
                <include name="*.scss" />
                <exclude name="_*.scss" />
            </fileset>
        </foreach>
    </target>

    <target name="sass-apply">
        <basename property="basename" file="${filename}" suffix=".scss" />

        <exec executable="sass" dir="${phing.dir}" checkreturn="true" passthru="true">
            <arg value="${dirs.phpapp}/media/scss/${filename}:${dirs.phpapp}/media/css/${basename}.min.css" />

            <arg value="-s" />
            <arg value="compressed" />

            <arg value="--update" />
        </exec>
    </target>

    <!--
    ====================================================================================================
    Tasks - Packages
    ====================================================================================================
    -->
    <target name="app-package" description="Component package build"
            depends="new-release,setup-properties">
        <echo>Creating ZIP package</echo>

        <copy file="${dirs.root}/CHANGELOG" tofile="${dirs.phpapp}/CHANGELOG.php" overwrite="true"/>

        <copy file="${dirs.templates}/version.php" tofile="${dirs.phpapp}/version.php" overwrite="true">
            <filterchain refid="standard-tokens"/>
        </copy>

        <zipme basedir="${dirs.phpapp}"
               destfile="${dirs.release}/panopticon-${version}.zip"
               includeemptydirs="true">
            <fileset refid="app"/>
        </zipme>
    </target>

    <!--
    ====================================================================================================
    Tasks - Documentation
    ====================================================================================================
    -->

    <target name="documentation" description="Creates the documentation packages"
            depends="doc-epub">
    </target>

    <target name="doc-epub" description="Documentation in ePub format">
        <phingcall target="docbook-epub">
            <property name="docs.input" value="panopticon.xml"/>
        </phingcall>
    </target>

</project>